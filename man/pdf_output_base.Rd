% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pdf.R
\name{pdf_output_base}
\alias{pdf_output_base}
\title{\code{rmarkdown} + \code{bookdown} で簡単に日本語文書を作るためのプリセットフォーマット}
\usage{
pdf_output_base(
  OUTPUT_TYPE,
  toc = TRUE,
  toc_unnumbered = TRUE,
  toc_depth = 3,
  toc_bib = FALSE,
  toc_appendix = FALSE,
  number_sections = TRUE,
  fig_align = "center",
  fig_caption = TRUE,
  fig_crop = TRUE,
  fig_height = 4.5,
  fig_width = 6.5,
  fig_auto_font = TRUE,
  fig_font = NULL,
  dev = "cairo_pdf",
  dev_args = NULL,
  out_width = "100\%",
  out_height = "100\%",
  out_extra = "keepaspectratio",
  df_print = "default",
  quote_footer = NULL,
  highlight = "default",
  highlight_bw = FALSE,
  code_rownumber = TRUE,
  code_softwrapped = TRUE,
  block_style = c("default", "kframe", "tcolorbox"),
  template = "default",
  keep_tex = TRUE,
  keep_md = TRUE,
  latex_engine = c("xelatex", "lualatex", "tectonic", "uplatex", "none"),
  citation_package = c("biblatex", "default", "natbib"),
  citation_options = "default",
  latexmk_emulation = !citation_package == "natbib",
  extract_media = FALSE,
  includes = NULL,
  md_extensions = "+raw_tex",
  knitr_options = NULL,
  output_extensions = NULL,
  pandoc_args = NULL,
  extra_dependencies = NULL,
  tombow = FALSE,
  add_folio = FALSE
)
}
\arguments{
\item{toc}{logical. \code{rmarkdown::\link{pdf_document}} と同じ. 目次の表示.}

\item{toc_unnumbered}{logical. 付番されていない見出しも目次に表示するかどうか.}

\item{toc_bib}{logical. 参考文献のセクションも目次に表示するかどうか.}

\item{toc_appendix}{logical. 補遺のセクションも目次に表示するかどうか.}

\item{number_sections}{logical. セクション見出しに番号を付けるかどうか.}

\item{fig_caption}{logical. 画像にキャプションを付けるか否か.}

\item{fig_crop}{logical. \code{pdfcrop} を使ってpdf画像の余白を削るかどうか.}

\item{fig_height}{numeric. 画像保存時の高さ. 単位インチ. デフォルトはbeamerのデフォルト高と同じ.}

\item{fig_width}{numeric. 画像保存時の幅. 単位インチ. デフォルトはbeamerのデフォルト幅と同じ.}

\item{fig_auto_font}{logical. グラフのフォントをOSの標準フォントに自動設定するかどうか}

\item{fig_font}{character. グラフのフォントに一括指定するフォント. \code{fig_auto_font = TRUE} のときのみ有効. デフォルトでは \code{latex_engine} ごとのデフォルトの本文フォントと同じものが選ばれます.}

\item{dev}{character. グラフィックデバイス. 日本語を使う限りデフォルト値から変更する利点はほぼない. ただし Mac のみ \code{"quartz"} の選択も考慮する余地があります.}

\item{df_print}{character.  データフレームの表示方法. \code{"default"}, \code{"kable"}, \code{"tibble"}, \code{"paged"} のいずれかを指定可能. グローバルオプション の \code{rmarkdown.df_print} を \code{FALSE} にするとこの機能を無効にできます.}

\item{quote_footer}{長さ2の character. 第1要素は引用ブロックの \verb{---} の後に挿入される. \code{NULL} ならば動作しない.}

\item{highlight}{character. シンタックスハイライトのスタイル. \code{"default"}, \code{"tango"}, \code{"pygments"}, \code{"kate"}, \code{"monochrome"}, \code{"espresso"}, \code{"zenburn"}, \code{"haddock"}, \code{NULL} が指定可能. \code{NULL} ならばシンタックスハイライト機能を無効にします.}

\item{highlight_bw}{logical. グラフの表示をグレースケールに強制変換するかどうか.}

\item{code_rownumber}{logical. コードセルに行番号を表示するかどうか.}

\item{code_softwrapped}{logical. チャンク内のコードを自動折り返しするかどうか. YAML メタデータ \code{code-softwrapped} でも可.}

\item{block_style}{character. \code{block}/\code{block2} チャンクや Fenced Div. 用のスタイル定義. \code{default}, \code{kframe}, \code{tcolorbox} に対応. \code{default} は \code{kframe} と同じ. YAML メタデータに \code{block-style: tcolorbox}, \code{kframe: true} などと書くこともできます. \code{awesomebox.sty} にも近日対応予定.}

\item{keep_tex}{logical. 出力時に .tex ファイルを残すかどうか. 経験的に knit 時エラーのほとんどは生成された .tex ファイルに問題の原因があるため, デバッグ用に \strong{\code{TRUE}を推奨します}.}

\item{latex_engine}{character. LaTeXエンジンの指定. \code{xelatex} または \code{lualatex} を想定. \code{pdflatex}での日本語表示は\strong{サポートしていない}.}

\item{citation_package}{character. 引用文献処理エンジンの設定. \code{default} は CSL, \code{biblatex} は BibLaTeX, \code{natbib} は BibTeX と natbib.sty の併用を意味します. 日本語表示のため, 紛らわしいですがデフォルトは \code{default} ではなく \code{biblatex} になっていることに注意してください. また, \code{natbib} を指定した場合, デフォルトでは latexmk のエミュレーションモードが無効になります.}

\item{citation_options}{character. \code{citation_package} のオプション.}

\item{latexmk_emulation}{logical. パッケージオプション \code{tinytex.latexmk.emulation} に連動する. デフォルトでは, 文献引用エンジンを \code{citation_package="natbib"} または \code{latex_engine = "uplatex"} にしたときのみ自動で \code{FALSE} となります. これは \code{tinytex} が (u)pLaTeX および (u)pBibTeX に対応していないための措置です. どうしても BibTeX を使いたい場合以外は操作する必要のない不要なオプションですが, 日本語を含む文書を作成する限りそのような場面はほぼないと思われます.}

\item{extract_media}{logical. markdown 構文の画像貼り付けに URL が使用されていた場合, ダウンロードするかどうか. Pandoc の \verb{--extract-media .} に対応. TODO: 現時点では　TRUE にすると余計な画像ファイルが生成される副作用があります. これは rmarkdown にもある不具合です.}

\item{includes}{named list. texファイルに追加するファイルパス. \code{"in_header"}, \code{"before_body"}, \code{"after_body"}, にはファイルパス, \code{"preamble"} は \code{document} 環境直前のプリアンブル記述をインラインで書くことができる. 詳細は \code{\link[rmarkdown]{includes}} 参照.}

\item{knitr_options}{list. \code{knitr$opts_chunk$set(...)} などで設定できるチャンクオプションのデフォルト値をリストで与えられます. リスト構造の詳細は \code{rmarkdown::\link{knitr_options}} などを参考にしてください. デフォルトの \code{NULL} は日本語文書に適した設定に自動で書き換えられることを意味します.}

\item{pandoc_args}{named list. pandoc に渡す引数. yamlヘッダのトップレベルに概ね対応します. 詳細は \code{\link[rmarkdown]{pdf_document}}, \code{\link[rmarkdown]{rmd_metadata}} や pandoc の公式ドキュメント参照.}

\item{extra_dependencies}{list. LaTeX に追加で読み込ませるパッケージのリスト. \verb{list(hyperef = c("unicode=true", "breaklinks=true"), lmodern = NULL))} のようにオプションを指定することも可能です.}

\item{tombow}{logical. 製本時に必要なトンボ (trim markers) を付けるかどうか. トンボは \code{gentombow.sty} で作成される.}

\item{add_folio}{logical. 製本時に全ページにノンブルが必要な場合があるらしいので全ページに表示したい時に.}

\item{out.width}{character. 画像を貼り付ける際のサイズ. チャンクごとに指定することも可能.}

\item{out.heigt}{character. \code{out.height} 参照.}

\item{out.extra}{character. その他の画像貼り付けに関するオプション. デフォルト \code{NULL} では \code{keepaspectratio} を追加し, アスペクト比を維持する.}

\item{md_extentions:}{character. Pandoc の \code{--from} オプションに追加する値です. 文書全体の変換処理に関係します. デフォルトの \code{+raw_tex} は, Pandoc の予測しづらい LaTeX コマンドのエスケープ処理を抑止する効果があります. それ以外の詳細は rmarkdown::\link{rmarkdown_format} を参照してください.}

\item{inculudes}{named list. 文書に挿入するファイル名を指定します. 構造は \code{rmarkdown::\link{includes}} を参考にしてください.}
}
\value{
\code{rmarkdown_output_format} class
}
\description{
bookdown::pdf_book wrapper format for Japanese typesetting with XeLaTeX or LuaLaTeX /\code{bookdown} で PDF文書をビルドする場合, 日本語を適切に表示するためにいろいろ必要だった調整を済ませたラッパフォーマット.
}
\details{
基本的に YAML フロントマター (+ \verb{_ouput.yml}) や knitr チャンクオプションで設定できることをデフォルト値として埋め込んだだけです.
\itemize{
\item pdf_book_ja は \code{\link{pdf_book}} の日本語版です
\item pdf_document2_ja は \code{\link{pdf_document2}} の日本語版です
\item pdf_document2_platex はさらに uplatex によるコンパイルを想定したバージョンです.
\code{pdf_book_ja()} は \code{index.Rmd} を必ずルートディレクトリに用意してください. \code{pdf_book_ja} は \strong{bookdown} パッケージの \code{\link{pdf_book}} と同様に, Knit では書籍をビルドできません. 詳細は \strong{bookdown} の解説を参考にしてください. それ以外は Knit でビルドできます.
}

テンプレートファイルも変更しているため, 厳密に同じではないですが, 既存のパッケージで表現するなら book の場合はデフォルトは概ねこうなります:\preformatted{output:
  bookdown::pdf_book:
    latex_engine: xelatex
    citation_package: biblatex
    templatex: japanese.templatex
    dev: cairo_pdf
    keep_tex: yes
    md_extensions: '+raw_tex'
documentclass: bxjsbook
mainfont: ...
sansfont: ...
monofont: ...
biblatexoption:
  - style=jauthoryear
}

加えて knitr のチャンクオプションやフックもいろいろ変更していますが, 基本的にはストレスにならないような動的な設定にしたつもりです. (例: テキストの自動折返し, 文字化けしないようなグラフィックデバイスの選択, 「図」「表」などの頻出キーワードのローカライズなど.)

\code{rmarkdown::\link{pdf_document}} と \code{bookdown::\link{pdf_document2}} の違いは相互参照をサポートしているかどうかです. 技術文書や論文では相互参照は良く使うので後者をベースに日本語文書向けの設定を内蔵しました.
}
\seealso{
Other pdf formats: 
\code{\link{beamer_presentation_ja}()},
\code{\link{pdf_book_ja}()}
}
\concept{pdf formats}
